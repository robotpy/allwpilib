if (!project.hasProperty('onlylinuxathena') && !project.hasProperty('onlylinuxraspbian') && !project.hasProperty('onlylinuxaarch64bionic')) {

    description = "A plugin that creates a simulation gui"

    ext {
        includeWpiutil = true
        pluginName = 'halsim_gui'
    }

    apply plugin: 'google-test-test-suite'


    ext {
        staticGtestConfigs = [:]
    }

    staticGtestConfigs["${pluginName}Test"] = []
    apply from: "${rootDir}/shared/googletest.gradle"

    apply from: "${rootDir}/shared/plugins/setupBuild.gradle"

    model {
        binaries {
            all {
                nativeUtils.useRequiredLibrary(it, 'imgui_static')
                if (it.targetPlatform.name == nativeUtils.wpi.platforms.roborio || it.targetPlatform.name == nativeUtils.wpi.platforms.raspbian || it.targetPlatform.name == nativeUtils.wpi.platforms.aarch64bionic) {
                    it.buildable = false
                    return
                }
                if (it.targetPlatform.operatingSystem.isWindows()) {
                    it.linker.args << 'Gdi32.lib' << 'Shell32.lib'
                } else if (it.targetPlatform.operatingSystem.isMacOsX()) {
                    it.linker.args << '-framework' << 'Cocoa' << '-framework' << 'IOKit' << '-framework' << 'CoreFoundation' << '-framework' << 'CoreVideo'
                } else {
                    it.linker.args << '-lX11' << '-lvulkan'
                }
            }
        }
    }
}
